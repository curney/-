from selenium.common.exceptions import NoSuchElementException
from selenium.common.exceptions import TimeoutException
from threading import Timer
import requests
import webbrowser
import time
import re
import pymysql
from bs4 import BeautifulSoup
from selenium import webdriver

headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)'
                  ' Chrome/73.0.3683.103 Safari/537.36',
    'Accept': '*/*',
    'Connection': 'keep-alive',
    }

# 声明并调用浏览器 并打开一个页面
browser = webdriver.Chrome()
current_handle = browser.current_window_handle
browser.set_page_load_timeout(5)
# 连接数据库获取将要自动登录的网页
db = pymysql.connect("localhost", "root", "root", "ffy")
cursor = db.cursor()
cursor.execute("SELECT website,account,password from sheet1")
cursor.scroll(2722, mode='absolute')
cursor.scroll(1, mode='relative')
row = cursor.fetchmany(20)
# print(cursor.lastrowid)


# def check_url(fake_url):
#     sessions = requests.session()
#     sessions.headers = headers
#     rs = sessions.get(fake_url, headers=headers, timeout=20, verify=False)
#     if rs is None:
#         return 1
#     else:
#         if rs.url == fake_url:
#             return 0
#         else:
#             return 1
# # 检查url是否为管理员页面 是则调用浏览器打开否则跳过 查询下一条记录


def login_data(real_url):
    # try:
    browser.get(real_url)
    # browser.implicitly_wait(2)
    # 设置加载时间 超时刷新
    # except TimeoutException:
    #     browser.execute_script('window.stop()')


def input_str(acc, pwd):
    flag = browser.find_element_by_id('user_login')
    if flag is None:
        print('查找登录框失败')
        browser.execute_script("window.close()")
    else:
        browser.find_element_by_id('user_login').send_keys(acc)
        browser.find_element_by_id('user_pass').send_keys(pwd)
        browser.find_element_by_id('wp-submit').click()


def open_new_window():
    new_window = "window.open('about:blank')"
    browser.execute_script(new_window)
    all_handles = browser.window_handles
    for new_handle in all_handles:
        if new_handle != current_handle:
            browser.switch_to.window(new_handle)

# 添加登录后是否能够进入postnew函数


def check_main_menu():
    flag = browser.find_element_by_name('wp-menu-name')
    if flag is None:
        print('没有发帖权限')
        browser.execute_script('window.close()')
    else:
        return 0


for s in row:
    try:
        login_data(s[0])
        time.sleep(0.5)
        input_str(s[1], s[2])
        time.sleep(0.5)
        open_new_window()
        check_main_menu()
    except TimeoutException:
        continue
    except NoSuchElementException:
        print('查找不到元素')
    # except requests.exceptions.ProxyError:
    #     print('proxy error')
    #     continue
    # except requests.exceptions.ReadTimeout:
    #     print('ReadTimeout error')
    #     continue
    # except requests.exceptions.ConnectionError:
    #     print('Connection error')
    #     continue
    # except requests.exceptions.TooManyRedirects:
    #     print('TooManyRedirects error')
    #     continue
